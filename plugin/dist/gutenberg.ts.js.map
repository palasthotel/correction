{"version":3,"file":"gutenberg.ts.js","mappings":"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","sources":["webpack://@palasthotel/corrections/./src/components/CorrectorsControl.tsx","webpack://@palasthotel/corrections/./src/container/MessagesPanelContainer.tsx","webpack://@palasthotel/corrections/./src/container/RevisionsPanelContainer.tsx","webpack://@palasthotel/corrections/./src/feature/document-panel.tsx","webpack://@palasthotel/corrections/./src/global.ts","webpack://@palasthotel/corrections/./src/hooks/use-message-content.ts","webpack://@palasthotel/corrections/./src/hooks/use-messages.ts","webpack://@palasthotel/corrections/./src/hooks/use-revisions.ts","webpack://@palasthotel/corrections/external window [\"wp\",\"components\"]","webpack://@palasthotel/corrections/external window [\"wp\",\"data\"]","webpack://@palasthotel/corrections/external window [\"wp\",\"editPost\"]","webpack://@palasthotel/corrections/external window [\"wp\",\"editor\"]","webpack://@palasthotel/corrections/external window [\"wp\",\"element\"]","webpack://@palasthotel/corrections/external window [\"wp\",\"plugins\"]","webpack://@palasthotel/corrections/webpack/bootstrap","webpack://@palasthotel/corrections/webpack/runtime/compat get default export","webpack://@palasthotel/corrections/webpack/runtime/define property getters","webpack://@palasthotel/corrections/webpack/runtime/hasOwnProperty shorthand","webpack://@palasthotel/corrections/webpack/runtime/make namespace object","webpack://@palasthotel/corrections/./src/gutenberg.ts"],"sourcesContent":["import {Button, FormTokenField} from \"@wordpress/components\";\nimport {useState} from \"@wordpress/element\";\nimport {getReceiverSuggestions} from \"../global\";\n\ntype Props = {\n    value: string[]\n    onChange: (value: string[]) => void\n}\nexport default function CorrectorsControl(\n    {\n        value,\n        onChange,\n    }: Props\n){\n\n    const [receiversCandidates, setReceiversCandidates] = useState<string[]>([]);\n\n    return (\n        <div>\n            <FormTokenField\n                label=\"Receivers\"\n                onChange={(value)=>{\n                    setReceiversCandidates(value as string[]);\n                }}\n                suggestions={getReceiverSuggestions()}\n                value={receiversCandidates}\n            />\n            <Button\n                variant=\"secondary\"\n                onClick={()=>{\n                    setReceiversCandidates([]);\n                    onChange([...value,...receiversCandidates]);\n                }}\n            >\n                Add receivers\n            </Button>\n        </div>\n    )\n}\n","import {useMessages} from \"../hooks/use-messages\";\nimport CorrectorsControl from \"../components/CorrectorsControl\";\nimport {useState} from \"@wordpress/element\";\nimport {PanelBody, TextareaControl, TextControl, ToggleControl} from \"@wordpress/components\";\nimport {getContentStructure} from \"../global\";\nimport {useMessageContent} from \"../hooks/use-message-content\";\n\ntype Props = {\n    title?: string\n    initialOpen?: boolean\n}\nexport default function MessagesPaneContainer(\n    {\n        title = \"Request\",\n        initialOpen = false,\n    }:Props\n) {\n\n    const messages = useMessages();\n    const [messageContent, setMessageContent] = useMessageContent()\n\n    const [recipients, setRecipients] = useState<string[]>([]);\n\n    const pending = messages.filter(m => m.sent_timestamp === null);\n    const pendingReceivers = pending.map(p => p.receiver);\n\n    const contentStructure = getContentStructure();\n\n    const onChange = (key: string) => (value: string | boolean) => {\n        setMessageContent({...messageContent, [key]: value})\n    }\n\n    return (\n        <PanelBody title={title} initialOpen={initialOpen}>\n\n            {contentStructure.map(widget => {\n                switch (widget.type) {\n                    case \"text\":\n                        return <TextControl\n                            key={widget.key}\n                            label={widget.label}\n                            value={messageContent[widget.key] ?? widget.defaultValue}\n                            onChange={onChange(widget.key)}\n                            help={widget.help}\n                        />\n                    case \"textarea\":\n                        return <TextareaControl\n                            key={widget.key}\n                            label={widget.label}\n                            value={messageContent[widget.key] ?? widget.defaultValue}\n                            onChange={onChange(widget.key)}\n                            help={widget.help}\n                        />\n                    case \"toggle\":\n                        return <ToggleControl\n                            key={widget.key}\n                            label={widget.label}\n                            onChange={onChange(widget.key)}\n                            checked={messageContent[widget.key] ?? (widget.defaultValue == \"1\")}\n                            help={widget.help}\n                        />\n\n                }\n                return <p key={widget.key}>Unknown: {widget.label}</p>\n            })}\n\n            <CorrectorsControl\n                value={recipients}\n                onChange={setRecipients}\n            />\n\n            <p>TODO: check recipient is valid</p>\n\n            <p>Add recipient to queue</p>\n\n            <ul>\n                {recipients.map(r => {\n                    return <li key={r}>{r}</li>\n                })}\n            </ul>\n\n            <hr/>\n\n            <h2>Sent messages</h2>\n\n\n        </PanelBody>\n    )\n}\n","import {useRevisionsGroupByAuthorSortByTime} from \"../hooks/use-revisions\";\nimport {Button, PanelBody, PanelRow} from \"@wordpress/components\";\nimport {getAllRevisionsUrl} from \"../global\";\n\nconst locale = (new Intl.DateTimeFormat()).resolvedOptions().locale\nconst dateFormatter = new Intl.DateTimeFormat(locale, {\n    year:'numeric',\n    day: 'numeric',\n    month: 'short',\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: false,\n})\n\ntype Props = {\n    title?: string\n    initialOpen?: boolean\n}\n\nexport default function RevisionsPanelContainer(\n    {\n        title = \"Latest revisions\",\n        initialOpen = true,\n    }:Props\n){\n    const revisions = useRevisionsGroupByAuthorSortByTime();\n\n    return (\n        <PanelBody title={title} initialOpen={ initialOpen }>\n            {revisions.map((revision,)=> {\n                return (\n                    <PanelRow key={revision.revision_post_id}>\n                        <div>\n                            {revision.author_name}<br/>\n                            <i>{dateFormatter.format( new Date(revision.timestamp * 1000) )}</i>\n                        </div>\n                    </PanelRow>\n                )\n            })}\n            <br/>\n            <Button href={getAllRevisionsUrl()} variant=\"link\">All revisions</Button>\n        </PanelBody>\n    )\n}\n","import {registerPlugin} from \"@wordpress/plugins\";\nimport {PluginSidebar, PluginSidebarMoreMenuItem} from '@wordpress/edit-post'\nimport {useRevisions} from \"../hooks/use-revisions\";\n\nimport MessagesPanelContainer from \"../container/MessagesPanelContainer\";\nimport RevisionsPanelContainer from \"../container/RevisionsPanelContainer\";\n\nconst sidebarName = \"corrections-sidebar\";\n\nregisterPlugin(\"corrections-plugin\", {\n    render: () => {\n\n        const revisions = useRevisions();\n\n        return <>\n\n            <PluginSidebarMoreMenuItem\n                target={sidebarName}\n                icon=\"editor-spellcheck\"\n            >\n                Corrections\n            </PluginSidebarMoreMenuItem>\n\n            <PluginSidebar\n                icon=\"editor-spellcheck\"\n                name={sidebarName}\n                title=\"Corrections\"\n            >\n                <RevisionsPanelContainer initialOpen={true} />\n\n                <MessagesPanelContainer initialOpen={false} />\n\n            </PluginSidebar>\n        </>\n    }\n});\n","\ndeclare global {\n    interface Window {\n        Corrections: {\n            postId: number\n            contentStructure: {\n                key: string\n                label: string\n                type: string\n                help?: string\n                defaultValue: any\n            }[]\n            receiverSuggestions: string[]\n            allRevisionsUrl: string\n            endpoints: {\n                isValidRecipientBaseUrl: string\n            }\n        }\n    }\n}\nexport const getPostId = () => window.Corrections.postId;\nexport const getContentStructure = () => window.Corrections.contentStructure;\nexport const getReceiverSuggestions = () => window.Corrections.receiverSuggestions;\nexport const getAllRevisionsUrl = () => window.Corrections.allRevisionsUrl\n\nexport const getIsValidRecipientEndpoint = (recipient: string) =>\n    window.Corrections.endpoints.isValidRecipientBaseUrl+\"&recipient=\"+encodeURI(recipient)\n\n\n","import {store as EditorStore} from \"@wordpress/editor\"\nimport {useDispatch, useSelect} from \"@wordpress/data\";\n\n\nexport const useMessageContent = () => {\n    const content: Record<string, any> = useSelect(select => {\n        // @ts-ignore\n        return select(EditorStore).getEditedPostAttribute(\"corrections_message_content\") ?? {};\n    }, []);\n    const dispatch = useDispatch(EditorStore);\n\n    return [\n        content,\n        (value: Record<string, any>) => {\n            console.debug(dispatch, value)\n            // @ts-ignore\n            dispatch.editPost({\n                corrections_message_content: value,\n            });\n        }\n    ] as const;\n}\n","import {store as EditorStore} from \"@wordpress/editor\"\nimport {useSelect} from \"@wordpress/data\";\n\ntype Message = {\n    id: number\n    post_id: number\n    receiver: string\n    modified_timestamp: number\n    sent_timestamp: number | null\n}\n\nexport const useMessages = (): Message[] => {\n    const store = useSelect(select => select(EditorStore), []);\n    // @ts-ignore\n    const messages = store.getEditedPostAttribute(\"corrections_messages\");\n\n    return Array.isArray(messages) ? messages : [];\n}\n","import {store as EditorStore} from \"@wordpress/editor\"\nimport {useSelect} from \"@wordpress/data\";\n\ntype Revision = {\n    revision_post_id: number\n    author_id: number\n    author_name: string\n    timestamp: number\n}\n\nexport const useRevisions = (): Revision[] => {\n    const store = useSelect(select => select(EditorStore), []);\n    // @ts-ignore\n    const revisions = store.getEditedPostAttribute(\"corrections_revisions\");\n\n    return Array.isArray(revisions) ? revisions : [];\n\n}\n\ntype RevisionGroup = Revision & {\n    count: number\n}\n\nexport const useRevisionsGroupByAuthorSortByTime = (): RevisionGroup[] => {\n    const revisions = useRevisions();\n\n    const grouped: {\n        [key: string]: Revision & { count: number }\n    } = {}\n    revisions.forEach(revision => {\n        if (grouped[revision[\"author_id\"]] == undefined) {\n            grouped[revision[\"author_id\"]] = {...revision, count: 0};\n        }\n        grouped[revision[\"author_id\"]].count++;\n        if(grouped[revision[\"author_id\"]].timestamp < revision.timestamp){\n            grouped[revision[\"author_id\"]].timestamp = revision.timestamp;\n        }\n    });\n\n    return Object.values(grouped).sort((a,b) => b.timestamp - a.timestamp);\n}\n","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './feature/document-panel'\nimport {getContentStructure} from \"./global\";\n\nconsole.debug(getContentStructure());\n"],"names":["Button","FormTokenField","useState","getReceiverSuggestions","CorrectorsControl","value","onChange","receiversCandidates","setReceiversCandidates","createElement","label","suggestions","variant","onClick","useMessages","PanelBody","TextareaControl","TextControl","ToggleControl","getContentStructure","useMessageContent","MessagesPaneContainer","title","initialOpen","messages","messageContent","setMessageContent","recipients","setRecipients","pending","filter","m","sent_timestamp","pendingReceivers","map","p","receiver","contentStructure","key","widget","_messageContent$widge","_messageContent$widge2","_messageContent$widge3","type","defaultValue","help","checked","r","useRevisionsGroupByAuthorSortByTime","PanelRow","getAllRevisionsUrl","locale","Intl","DateTimeFormat","resolvedOptions","dateFormatter","year","day","month","hour","minute","hour12","RevisionsPanelContainer","revisions","revision","revision_post_id","author_name","format","Date","timestamp","href","registerPlugin","PluginSidebar","PluginSidebarMoreMenuItem","useRevisions","MessagesPanelContainer","sidebarName","render","Fragment","target","icon","name","getPostId","window","Corrections","postId","receiverSuggestions","allRevisionsUrl","getIsValidRecipientEndpoint","recipient","endpoints","isValidRecipientBaseUrl","encodeURI","store","EditorStore","useDispatch","useSelect","content","select","_select$getEditedPost","getEditedPostAttribute","dispatch","console","debug","editPost","corrections_message_content","Array","isArray","grouped","forEach","undefined","count","Object","values","sort","a","b"],"sourceRoot":""}